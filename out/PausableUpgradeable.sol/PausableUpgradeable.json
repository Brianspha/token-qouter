{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "paused()": "5c975abb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": "PausableUpgradeable"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
    "id": 39598,
    "exportedSymbols": {
      "AddressUpgradeable": [
        40642
      ],
      "ContextUpgradeable": [
        40684
      ],
      "Initializable": [
        39470
      ],
      "PausableUpgradeable": [
        39597
      ]
    },
    "nodeType": "SourceUnit",
    "src": "105:2982:15",
    "nodes": [
      {
        "id": 39472,
        "nodeType": "PragmaDirective",
        "src": "105:23:15",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 39473,
        "nodeType": "ImportDirective",
        "src": "130:41:15",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "file": "../utils/ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39598,
        "sourceUnit": 40685,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39474,
        "nodeType": "ImportDirective",
        "src": "172:42:15",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39598,
        "sourceUnit": 39471,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39597,
        "nodeType": "ContractDefinition",
        "src": "656:2430:15",
        "nodes": [
          {
            "id": 39484,
            "nodeType": "EventDefinition",
            "src": "815:30:15",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 39480,
              "nodeType": "StructuredDocumentation",
              "src": "737:73:15",
              "text": " @dev Emitted when the pause is triggered by `account`."
            },
            "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
            "name": "Paused",
            "nameLocation": "821:6:15",
            "parameters": {
              "id": 39483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39482,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "836:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 39484,
                  "src": "828:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "827:17:15"
            }
          },
          {
            "id": 39489,
            "nodeType": "EventDefinition",
            "src": "926:32:15",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 39485,
              "nodeType": "StructuredDocumentation",
              "src": "851:70:15",
              "text": " @dev Emitted when the pause is lifted by `account`."
            },
            "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
            "name": "Unpaused",
            "nameLocation": "932:8:15",
            "parameters": {
              "id": 39488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39487,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "949:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 39489,
                  "src": "941:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "940:17:15"
            }
          },
          {
            "id": 39491,
            "nodeType": "VariableDeclaration",
            "src": "964:20:15",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_paused",
            "nameLocation": "977:7:15",
            "scope": 39597,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 39490,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "964:4:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 39501,
            "nodeType": "FunctionDefinition",
            "src": "1063:97:15",
            "nodes": [],
            "body": {
              "id": 39500,
              "nodeType": "Block",
              "src": "1116:44:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 39497,
                      "name": "__Pausable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39511,
                      "src": "1126:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 39498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1126:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39499,
                  "nodeType": "ExpressionStatement",
                  "src": "1126:27:15"
                }
              ]
            },
            "documentation": {
              "id": 39492,
              "nodeType": "StructuredDocumentation",
              "src": "991:67:15",
              "text": " @dev Initializes the contract in unpaused state."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 39495,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39494,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "1099:16:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39415,
                  "src": "1099:16:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "1099:16:15"
              }
            ],
            "name": "__Pausable_init",
            "nameLocation": "1072:15:15",
            "parameters": {
              "id": 39493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1087:2:15"
            },
            "returnParameters": {
              "id": 39496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1116:0:15"
            },
            "scope": 39597,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 39511,
            "nodeType": "FunctionDefinition",
            "src": "1166:95:15",
            "nodes": [],
            "body": {
              "id": 39510,
              "nodeType": "Block",
              "src": "1229:32:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 39508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39506,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39491,
                      "src": "1239:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 39507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1249:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1239:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39509,
                  "nodeType": "ExpressionStatement",
                  "src": "1239:15:15"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 39504,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39503,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "1212:16:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39415,
                  "src": "1212:16:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "1212:16:15"
              }
            ],
            "name": "__Pausable_init_unchained",
            "nameLocation": "1175:25:15",
            "parameters": {
              "id": 39502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1200:2:15"
            },
            "returnParameters": {
              "id": 39505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1229:0:15"
            },
            "scope": 39597,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 39519,
            "nodeType": "ModifierDefinition",
            "src": "1447:72:15",
            "nodes": [],
            "body": {
              "id": 39518,
              "nodeType": "Block",
              "src": "1472:47:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 39514,
                      "name": "_requireNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39548,
                      "src": "1482:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 39515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1482:19:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39516,
                  "nodeType": "ExpressionStatement",
                  "src": "1482:19:15"
                },
                {
                  "id": 39517,
                  "nodeType": "PlaceholderStatement",
                  "src": "1511:1:15"
                }
              ]
            },
            "documentation": {
              "id": 39512,
              "nodeType": "StructuredDocumentation",
              "src": "1267:175:15",
              "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
            },
            "name": "whenNotPaused",
            "nameLocation": "1456:13:15",
            "parameters": {
              "id": 39513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1469:2:15"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 39527,
            "nodeType": "ModifierDefinition",
            "src": "1697:66:15",
            "nodes": [],
            "body": {
              "id": 39526,
              "nodeType": "Block",
              "src": "1719:44:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 39522,
                      "name": "_requirePaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39559,
                      "src": "1729:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 39523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:16:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39524,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:16:15"
                },
                {
                  "id": 39525,
                  "nodeType": "PlaceholderStatement",
                  "src": "1755:1:15"
                }
              ]
            },
            "documentation": {
              "id": 39520,
              "nodeType": "StructuredDocumentation",
              "src": "1525:167:15",
              "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
            },
            "name": "whenPaused",
            "nameLocation": "1706:10:15",
            "parameters": {
              "id": 39521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1716:2:15"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 39536,
            "nodeType": "FunctionDefinition",
            "src": "1858:84:15",
            "nodes": [],
            "body": {
              "id": 39535,
              "nodeType": "Block",
              "src": "1911:31:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 39533,
                    "name": "_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 39491,
                    "src": "1928:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 39532,
                  "id": 39534,
                  "nodeType": "Return",
                  "src": "1921:14:15"
                }
              ]
            },
            "documentation": {
              "id": 39528,
              "nodeType": "StructuredDocumentation",
              "src": "1769:84:15",
              "text": " @dev Returns true if the contract is paused, and false otherwise."
            },
            "functionSelector": "5c975abb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nameLocation": "1867:6:15",
            "parameters": {
              "id": 39529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1873:2:15"
            },
            "returnParameters": {
              "id": 39532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39531,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39536,
                  "src": "1905:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39530,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1905:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1904:6:15"
            },
            "scope": 39597,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 39548,
            "nodeType": "FunctionDefinition",
            "src": "2010:106:15",
            "nodes": [],
            "body": {
              "id": 39547,
              "nodeType": "Block",
              "src": "2061:55:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2079:9:15",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 39541,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39536,
                            "src": "2080:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 39542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2080:8:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "id": 39544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2090:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        },
                        "value": "Pausable: paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        }
                      ],
                      "id": 39540,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2071:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 39545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2071:38:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39546,
                  "nodeType": "ExpressionStatement",
                  "src": "2071:38:15"
                }
              ]
            },
            "documentation": {
              "id": 39537,
              "nodeType": "StructuredDocumentation",
              "src": "1948:57:15",
              "text": " @dev Throws if the contract is paused."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireNotPaused",
            "nameLocation": "2019:17:15",
            "parameters": {
              "id": 39538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2036:2:15"
            },
            "returnParameters": {
              "id": 39539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2061:0:15"
            },
            "scope": 39597,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 39559,
            "nodeType": "FunctionDefinition",
            "src": "2188:106:15",
            "nodes": [],
            "body": {
              "id": 39558,
              "nodeType": "Block",
              "src": "2236:58:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 39553,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39536,
                          "src": "2254:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 39554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2254:8:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "id": 39555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2264:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        },
                        "value": "Pausable: not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        }
                      ],
                      "id": 39552,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2246:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 39556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2246:41:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39557,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:41:15"
                }
              ]
            },
            "documentation": {
              "id": 39549,
              "nodeType": "StructuredDocumentation",
              "src": "2122:61:15",
              "text": " @dev Throws if the contract is not paused."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requirePaused",
            "nameLocation": "2197:14:15",
            "parameters": {
              "id": 39550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2211:2:15"
            },
            "returnParameters": {
              "id": 39551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2236:0:15"
            },
            "scope": 39597,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 39575,
            "nodeType": "FunctionDefinition",
            "src": "2429:115:15",
            "nodes": [],
            "body": {
              "id": 39574,
              "nodeType": "Block",
              "src": "2478:66:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 39567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39565,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39491,
                      "src": "2488:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 39566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2498:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2488:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39568,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:14:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 39570,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40669,
                          "src": "2524:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 39571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2524:12:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 39569,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39484,
                      "src": "2517:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 39572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2517:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39573,
                  "nodeType": "EmitStatement",
                  "src": "2512:25:15"
                }
              ]
            },
            "documentation": {
              "id": 39560,
              "nodeType": "StructuredDocumentation",
              "src": "2300:124:15",
              "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 39563,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39562,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "2464:13:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39519,
                  "src": "2464:13:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "2464:13:15"
              }
            ],
            "name": "_pause",
            "nameLocation": "2438:6:15",
            "parameters": {
              "id": 39561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2444:2:15"
            },
            "returnParameters": {
              "id": 39564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2478:0:15"
            },
            "scope": 39597,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 39591,
            "nodeType": "FunctionDefinition",
            "src": "2676:117:15",
            "nodes": [],
            "body": {
              "id": 39590,
              "nodeType": "Block",
              "src": "2724:69:15",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 39583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39581,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39491,
                      "src": "2734:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 39582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2744:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2734:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39584,
                  "nodeType": "ExpressionStatement",
                  "src": "2734:15:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 39586,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40669,
                          "src": "2773:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 39587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2773:12:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 39585,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39489,
                      "src": "2764:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 39588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2764:22:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39589,
                  "nodeType": "EmitStatement",
                  "src": "2759:27:15"
                }
              ]
            },
            "documentation": {
              "id": 39576,
              "nodeType": "StructuredDocumentation",
              "src": "2550:121:15",
              "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 39579,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39578,
                  "name": "whenPaused",
                  "nameLocations": [
                    "2713:10:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39527,
                  "src": "2713:10:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "2713:10:15"
              }
            ],
            "name": "_unpause",
            "nameLocation": "2685:8:15",
            "parameters": {
              "id": 39577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2693:2:15"
            },
            "returnParameters": {
              "id": 39580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2724:0:15"
            },
            "scope": 39597,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 39596,
            "nodeType": "VariableDeclaration",
            "src": "3058:25:15",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 39592,
              "nodeType": "StructuredDocumentation",
              "src": "2799:254:15",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "3078:5:15",
            "scope": 39597,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 39593,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3058:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 39595,
              "length": {
                "hexValue": "3439",
                "id": 39594,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3066:2:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "3058:11:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 39476,
              "name": "Initializable",
              "nameLocations": [
                "697:13:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39470,
              "src": "697:13:15"
            },
            "id": 39477,
            "nodeType": "InheritanceSpecifier",
            "src": "697:13:15"
          },
          {
            "baseName": {
              "id": 39478,
              "name": "ContextUpgradeable",
              "nameLocations": [
                "712:18:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40684,
              "src": "712:18:15"
            },
            "id": 39479,
            "nodeType": "InheritanceSpecifier",
            "src": "712:18:15"
          }
        ],
        "canonicalName": "PausableUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 39475,
          "nodeType": "StructuredDocumentation",
          "src": "216:439:15",
          "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          39597,
          40684,
          39470
        ],
        "name": "PausableUpgradeable",
        "nameLocation": "674:19:15",
        "scope": 39598,
        "usedErrors": [],
        "usedEvents": [
          39316,
          39484,
          39489
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 15
}